---
formatter: markdown table
header-from: main.tf
content: |-
  # Basic EC2 Set-up
  
  **DO NOT EDIT THE README.md file** - this is managed by `terraform-docs`:
  
  ```shell
  brew install terraform-docs
  
  cd terraform
  terraform-docs markdown --config=.terraform-docs.yml .
  ```
  
  Instead edit the `.terraform-docs.yml` file and run the commands above. 
  
  ## Table of Contents

  - [Overview][1]
  - [Example Input][2]
  - [Requirements][3]
  - [Inputs][4]
  - [Outputs][5]
  - [Modules][6]
  - [Resources][7]

  ## Overview
  
  Ubuntu or AmazonLinux2 instance(s) in private subnets, with an IAM profile that allows `ssm`
  connections.
  
  ```
  ./scripts/terraform-init.sh remote-state-key
  terraform plan -out tf.plan
  terraform apply tf.plan
  ...
  terraform destroy
  ```
  
  The `application` and `environment` [variables](./variables.tf) are used in the Ansible
  dynamic inventory to identify the hosts.
  
  The bash scripts have been checked using `shellcheck` (installed on MacOS using Homebrew).
  
  **NB** I reduced typing by defining these aliases in my `.zprofile`:
  ```shell
  alias tdocs='terraform-docs markdown --config=.terraform-docs.yml .'
  alias tfmt='terraform fmt --recursive'
  alias tfclean="rm -rf .terraform/ .terraform.lock.hcl"
  alias tfsec="tfsec --exclude-downloaded-modules"
  ```

  {{ .Header }}

  {{ .Requirements }}{{"\n"}}
  {{ .Inputs }}{{"\n"}}
  {{ .Outputs }}{{"\n"}}
  {{ .Modules }}{{"\n"}}
  {{ .Resources }}{{"\n"}}
  [1]: #overview
  [2]: #example-input
  [3]: #requirements
  [4]: #inputs
  [5]: #outputs
  [6]: #modules
  [7]: #resources

sort:
  enabled: true
output:
  file: README.md
  mode: replace
  template: |-
    {{ .Content }}{{"\n"}}
settings:
  indent: 2
  read-comments: false
  hide-empty: false