# https://taskfile.dev

version: '3'

dotenv: ['.env']

tasks:
  default:
    desc: Execute all of the static checks on the Terraform code
    cmds:
      - task: tinit
      - task: tvalid
      - task: tlint
      - task: tsec

  tinit:
    desc: Initialise the Terraform configuration (local state)
    dir: terraform
    cmds:
      - terraform init -backend=false -upgrade
    internal: true

  tclean:
    desc: Cleans the downloaded modules, providers and the lock file
    dir: terraform
    cmds:
      - rm -rf .terraform/
      - rm -f .terraform.lock.hcl

  tvalid:
    desc: Validates the Terraform including a format check
    dir: terraform
    cmds:
      - task: tinit
      - terraform fmt -recursive -diff
      - terraform validate

  tlint:
    desc: Test the Terraform config for formatting, validity and linting
    dir: terraform
    cmds:
      - task: tinit
      - tflint

  tsec:
    desc: Check the Terraform config for security good practices
    dir: terraform
    cmds:
      - tfsec --exclude-downloaded-modules

  tplan:
    desc: Create a Terraform plan (local state)
    dir: terraform
    vars:
      ENV: '{{ .ENVIRONMENT | default "envname" }}'
    cmds:
      - task: tinit
      - terraform plan -var 'environment={{ .ENV }}' -out tf.plan

  tapply:
    desc: Apply the Terraform plan (local state)
    dir: terraform
    cmds:
      - task: tinit
      - terraform apply tf.plan

  tdestroy:
    desc: Destroy the resources in the Terraform state
    dir: terraform
    cmds:
      - terraform destroy -auto-approve
